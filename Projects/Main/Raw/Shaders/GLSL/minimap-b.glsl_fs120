#version 120

uniform vec4 Params;
uniform vec4 HeightParams;
uniform mat4 MapTexturesMatrix;
uniform vec4 SkewParams;

uniform sampler2D Texture0;
uniform sampler2D Texture1;
uniform sampler2D Texture2;
uniform sampler2D Texture3;

varying vec2	PassUV;

float Luma( vec3 Color )
{
	return dot( Color, vec3( 0.299f, 0.587f, 0.114f ) );
}

vec2 FixUV( vec2 UV )
{
	return vec2( UV.x, 1.0f - UV.y );
}

void main()
{
	vec2	FixedUV					= FixUV( PassUV );

	vec4	Center					= texture2D( Texture0, FixedUV );
	vec4	Neighbor0				= texture2D( Texture0, FixedUV + Params.xz );
	vec4	Neighbor1				= texture2D( Texture0, FixedUV - Params.xz );
	vec4	Neighbor2				= texture2D( Texture0, FixedUV + Params.zy );
	vec4	Neighbor3				= texture2D( Texture0, FixedUV - Params.zy );

	float	HeightDelta				= Center.g - SkewParams.z;
	vec2	SkewXY					= vec2( SkewParams.x * -HeightDelta, SkewParams.y * HeightDelta );

	vec4	MapTexturesUV			= vec4( PassUV, 0.0f, 1.0f ) * MapTexturesMatrix;
	float	Floor					= texture2D( Texture2, MapTexturesUV.xy + SkewXY ).r;
	float	Solid					= texture2D( Texture3, MapTexturesUV.xy ).r;

	float	AllNeighborsWalkable	= Neighbor0.r * Neighbor1.r * Neighbor2.r * Neighbor3.r;

	vec4	CenterHeights			= vec4( Center.g,		Center.g,		Center.g,		Center.g );
	vec4	NeighborHeights			= vec4( Neighbor0.g,	Neighbor1.g,	Neighbor2.g,	Neighbor3.g );
	//vec4	NeighborsReachable		= step( NeighborHeights - CenterHeights, HeightParams.wwww );
	vec4	NeighborsReachable		= step( CenterHeights - NeighborHeights, HeightParams.wwww );
	float	AllNeighborsReachable	= NeighborsReachable.r * NeighborsReachable.g * NeighborsReachable.b * NeighborsReachable.a;
	float	AllNeighborsValid		= AllNeighborsWalkable * AllNeighborsReachable;

	float	IsWalkable				= mix( 0.0f, Center.r, Center.b );
	float	NotWalkable				= 1.0f - IsWalkable;
	float	NoEdge					= mix( 1.0f, clamp( AllNeighborsValid + NotWalkable, 0.0f, 1.0f ), Params.w );
	float	Edge					= 1.0f - NoEdge;

	float	HeightDifference		= HeightParams.y * ( Center.g - HeightParams.x );
	float	HeightTonemap			= 1.0f + ( ( HeightParams.z * HeightDifference ) / ( 1.0f + abs( HeightDifference ) ) );
	
	float	MapTexture				= mix( Solid, Floor, IsWalkable );
	float	TonemappedTexture		= MapTexture * HeightTonemap;
	float	TonesU					= Edge + NoEdge * mix( MapTexture, TonemappedTexture, IsWalkable );

	vec3	Value					= texture2D( Texture1, vec2( TonesU, 0.0f ) ).rgb;
	vec4	FinalValue				= vec4( Value, Luma( Value ) );

	gl_FragColor = FinalValue;
}