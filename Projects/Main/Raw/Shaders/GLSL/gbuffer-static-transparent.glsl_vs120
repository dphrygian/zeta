#version 120

uniform mat4	WVP;
uniform mat4	WorldMatrix;
uniform vec4	RTDims;

attribute vec4	InPosition;
attribute vec3	InNormal;
attribute vec4	InTangent;
attribute vec2	InUV;

varying vec2	PassUV;
varying vec4	PassPositionWS;
varying vec4	PassPositionSS;
varying vec4	PassPixelPos;
varying vec3	PassNormalWS;
varying vec4	PassTangentWS;

vec4 ConvertToPixelPos( vec4 p )
{
	return vec4( RTDims.xy * vec2( p.x + p.w, p.w - p.y ), p.zw );
}

void main()
{
	gl_Position		= InPosition * WVP;
	PassUV			= InUV;
	PassPositionWS	= InPosition * WorldMatrix;
	PassPositionSS	= gl_Position;
	PassPixelPos	= ConvertToPixelPos( gl_Position );
	PassNormalWS	= ( vec4( InNormal, 0.0f ) * WorldMatrix ).xyz;
	PassTangentWS	= vec4( ( vec4( InTangent.xyz, 0.0f ) * WorldMatrix ).xyz, InTangent.w );
}